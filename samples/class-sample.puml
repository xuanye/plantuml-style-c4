@startuml 


!theme xuanye from ../

GRAY_ARROW()


title LogFramework - Class Diagram


class LoggerManager {
  -Dictionary<string,Logger> _loggers  
  +Logger getLogger(string name)
}

class Logger {
  -List<LoggerHandler> _handlers  
  +void addHandler(LoggerHandler handler)
  +void removeHandler(string name)
  +void LogIt(LogMessage msg)
}

class LoggerHandler{
  -ILogFormatter _logFormater
  -ILogWriter _logWriter
  -ILogFilter _logFilter
  
  +void LogIt(LogMessage msg)
}

interface ILogFormatter{
  +string Format(LogMessage message)
}
interface ILogWriter{
  +void Write(string formattedMsg)
}

interface ILogFilter{
 +bool Filter(LogMessage message)
}


class LevelFilter

class FileWriter
class ConsoleWriter

class XmlFormatter
class TextFormatter
class JsonFormatter


class LogMessage{
  +string LogId
  +string ThreadId
  +string Mesasge
  +LogLevel Level
}
enum LogLevel{
  +TRACE
  +DEBUG
  +INFO
  +WARN
  +ERROR
}


Logger <-right- LoggerManager: use
Logger o-down- LoggerHandler: aggregation
ILogFormatter <-left- LoggerHandler: use
ILogWriter <-up- LoggerHandler: use
ILogFilter <-up- LoggerHandler: use
ILogFilter <|.down. LevelFilter: realize
ILogFormatter <|.right. XmlFormatter: realize
ILogFormatter <|.down. TextFormatter: realize
ILogFormatter <|.down. JsonFormatter: realize
ILogWriter <|.down. FileWriter: realize
ILogWriter <|.down. ConsoleWriter: realize
LogMessage <-down- ILogFormatter: use
LogLevel <-left- LogMessage: use
@enduml
